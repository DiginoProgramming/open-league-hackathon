import * as TonTypes from '../types/ton-types';
/**
 * The Transact contains methods used for sending transactions and
 * checking on the state of submitted transactions.
 *
 * Do not call this constructor directly. Instead, instantiate an Tonfura object
 * with `const tonfura = new Tonfura(config)` and then access the transact via `tonfura.transact`.
 */
export declare class Transact {
    private readonly config;
    /**
     * Send serialized boc file: fully packed and serialized external message to blockchain.
     *
     * @param boc
     * @public
     */
    sendBoc(boc: TonTypes.SendBocParams['boc']): Promise<import("axios").AxiosResponse<import("../types/json-rpc-types").JsonRpcResponse<import("../types/output").ReturnSendBoc>, any>>;
    /**
     * Send serialized boc file: fully packed and serialized external message to blockchain. The method returns message hash.
     *
     * @param boc
     * @public
     */
    sendBocReturnHash(boc: TonTypes.SendBocReturnHashParams['boc']): Promise<import("axios").AxiosResponse<import("../types/json-rpc-types").JsonRpcResponse<import("../types/output").ReturnSendBoc>, any>>;
}
